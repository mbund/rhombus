datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Session {
    id      String   @id @default(cuid())
    expires DateTime
    userId  String
    user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Email {
    id       String    @id @default(cuid())
    email    String    @unique
    verified DateTime?
    User     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId   String
}

model Discord {
    id             String @unique
    username       String
    globalUsername String
    image          String
    email          String
    user           User   @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId         String @unique
}

model User {
    id          String    @id @default(cuid())
    discord     Discord?
    emails      Email[]
    sessions    Session[]
    ips         IP[]
    team        Team?     @relation(fields: [teamId], references: [id], name: "member")
    teamId      String?
    ownerTeam   Team?     @relation(name: "owner")
    ownerTeamId String?
}

model Team {
    id            String @id @default(cuid())
    name          String
    discordRoleId String

    users   User[] @relation(name: "member")
    owner   User   @relation(fields: [ownerId], references: [id], name: "owner", onDelete: Cascade)
    ownerId String @unique

    inviteToken String @unique
}

model EmailVerificationToken {
    token   String   @id @unique @default(cuid())
    email   String
    expires DateTime
}

model IP {
    address String @id @unique
    users   User[]
}
